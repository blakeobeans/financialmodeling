getwd() #be in project directory
###LoanStats_2018.csv is for loans that were accepted; RejectStats_2018Q1.csv is for loans that were rejected
#data is for Q1 2018
setwd("./data")
files = list.files(pattern="*.csv")
LoanStats_2018Q1 <- read.csv("D:/Google Drive/Life/Statistics/creditlimit/creditlimit/data/LoanStats_2018Q1.csv")
View(LoanStats_2018Q1)
accepted <- read.csv("LoanStats_2018Q1.csv")
rejected <- read.csv("RejectStats_2018Q1.csv")
colnames(rejected)
colnames(accepted)
library(tidyverse)
library(data.table)
library(lubridate)
library(readr)
getwd() #be in project directory
###LoanStats_2018.csv is for loans that were accepted; RejectStats_2018Q1.csv is for loans that were rejected
#data is for Q1 2018
#original data can be downloaded here: https://www.lendingclub.com/info/download-data.action
#for both datasets, first row was removed (link to prospectus)
#for LoanStats_2018Q1.csv, the first two columns- id and memberid- were all empty. these columns were removed manually
setwd("./data")
accepted <- read.csv("LoanStats_2018Q1.csv")
TEMP <- accepted %>% select(all_util, bc_util, delinq_2yrs, il_util, percent_bc_gt_75,
tot_cur_bal, tot_hi_cred_lim, total_bal_ex_mort, total_bal_il,
total_bc_limit, total_il_high_credit_limit, total_rec_int,
total_rec_late_fee, total_rec_prncp, total_rev_hi_lim)
rm(TEMP)
setwd("..")
getwd() #be in project directory
###import both datasets (accepted and rejected) and remove unnecessary variables
source('scripts/import_data.r')
library(skimr)
skim(accepted)
skim(accepted)
library(Hmisc)
describe(accepted)
skim(accepted)
library(pastecs)
install.packages("pastecs")
library(pastecs)
stat.desc(accepted)
library(psych)
psych::describe(accepted)
library(summarytools)
install.packages("summarytools")
library(summarytools)
descr(accepted)
dfSummary(accepted)
skim(accepted)
#convert all variables to numeric
col_names <- names(accepted)
accepted[,col_names] <- lapply(accepted[,col_names], numeric)
accepted[,col_names] <- lapply(accepted[,col_names], as.numeric)
str(accepted)
#skim it- what variables deserve further consideration?
skim(accepted)
###LoanStats_2018.csv is for loans that were accepted; RejectStats_2018Q1.csv is for loans that were rejected
#data is for Q1 2018
#original data can be downloaded here: https://www.lendingclub.com/info/download-data.action
#for both datasets, first row was removed (link to prospectus)
#for LoanStats_2018Q1.csv, the first two columns- id and memberid- were all empty. these columns were removed manually
setwd("./data")
accepted <- read.csv("LoanStats_2018Q1.csv")
#select relevant variables. This dataset is primarily focused on loans, but also includes variables that are relevant to credit cards.
#in particular "bc" in the variable name indicates "bank card"
accepted <- accepted %>% select(bc_util, percent_bc_gt_75, total_bc_limit, bc_open_to_buy,
max_bal_bc, mths_since_recent_bc,
mths_since_recent_bc_dlq)
#summarise data
library(skimr)
#convert all variables to numeric in order to make skim() easier to read
col_names <- names(accepted)
accepted[,col_names] <- lapply(accepted[,col_names], as.numeric)
#skim it- what variables deserve further consideration?
skim(accepted)
###remove missing data
accepted <- complete.cases(accepted)
accepted <- read.csv("LoanStats_2018Q1.csv")
###select relevant variables.
#This dataset is primarily focused on loans, but also includes variables that are relevant to credit cards.
#in particular "bc" in the variable name indicates "bank card". #variables are sorted alphebetically
accepted <- accepted %>% select(bc_util, percent_bc_gt_75, total_bc_limit, bc_open_to_buy,
max_bal_bc, mths_since_recent_bc,
mths_since_recent_bc_dlq)
###remove missing data
accepted <- accepted[complete.cases(accepted),]
#skim it- what variables deserve further consideration?
skim(accepted)
accepted <- read.csv("LoanStats_2018Q1.csv")
###select relevant variables.
#This dataset is primarily focused on loans, but also includes variables that are relevant to credit cards.
#in particular "bc" in the variable name indicates "bank card". #variables are sorted alphebetically
accepted <- accepted %>% select(bc_util, percent_bc_gt_75, total_bc_limit, bc_open_to_buy,
max_bal_bc, mths_since_recent_bc,
mths_since_recent_bc_dlq)
###summarise data
library(skimr)
#convert all variables to numeric in order to make skim() easier to read
col_names <- names(accepted)
accepted[,col_names] <- lapply(accepted[,col_names], as.numeric)
#skim it- what variables deserve further consideration?
skim(accepted)
accepted <- read.csv("LoanStats_2018Q1.csv")
###select relevant variables.
#This dataset is primarily focused on loans, but also includes variables that are relevant to credit cards.
#in particular "bc" in the variable name indicates "bank card". #variables are sorted alphebetically
accepted <- accepted %>% select(bc_util,
percent_bc_gt_75,
total_bc_limit,
bc_open_to_buy,
max_bal_bc,
mths_since_recent_bc,
#mths_since_recent_bc_dlq #remove for now, too many missing observations
) %>% arrange(desc)
###select relevant variables.
#This dataset is primarily focused on loans, but also includes variables that are relevant to credit cards.
#in particular "bc" in the variable name indicates "bank card". #variables are sorted alphebetically
accepted <- accepted %>% select(bc_util,
percent_bc_gt_75,
total_bc_limit,
bc_open_to_buy,
max_bal_bc,
mths_since_recent_bc,
#mths_since_recent_bc_dlq #remove for now, too many missing observations
) %>% arrange()
###summarise data
library(skimr)
#convert all variables to numeric in order to make skim() easier to read
col_names <- names(accepted)
accepted[,col_names] <- lapply(accepted[,col_names], as.numeric)
#skim it- what variables deserve further consideration?
skim(accepted)
accepted <- read.csv("LoanStats_2018Q1.csv")
###select relevant variables.
#This dataset is primarily focused on loans, but also includes variables that are relevant to credit cards.
#in particular "bc" in the variable name indicates "bank card". #variables are sorted alphebetically
accepted <- accepted %>% select(bc_util,
percent_bc_gt_75,
total_bc_limit,
bc_open_to_buy,
max_bal_bc,
mths_since_recent_bc,
#mths_since_recent_bc_dlq #remove for now, too many missing observations
) %>% arrange()
###summarise data
library(skimr)
#convert all variables to numeric in order to make skim() easier to read
col_names <- names(accepted)
accepted[,col_names] <- lapply(accepted[,col_names], as.numeric)
#skim it- what variables deserve further consideration?
skim(accepted)
###remove missing data
acceptedcomplete <- accepted[complete.cases(accepted),]
acceptedNAs <- accepted[!complete.cases(accepted),]
###exit script
setwd("..")
library(tidyverse)
library(lubridate)
library(data.table)
library(readr)
getwd() #be in project directory
###import both datasets (accepted and rejected) and remove unnecessary variables
source('scripts/import_data.r')
#skim it- what variables deserve further consideration?
skim(accepted)
#skim it- what variables deserve further consideration?
skim(accepted)
###remove missing data
acceptedcomplete <- accepted[complete.cases(accepted),]
acceptedNAs <- accepted[!complete.cases(accepted),]
###remove missing data
acceptedcomplete <- accepted[complete.cases(accepted),]
acceptedNAs <- accepted[!complete.cases(accepted),]
hist(accepted$bc_util)
hist(accepted$bc_util, breaks=10)
hist(accepted$bc_util, breaks=5)
hist(accepted$bc_util, breaks=40)
sum(accepted$bc_util == 0)
sum(accepted$bc_util = 0)
table(accepted$bc_util)
sum(accepted$bc_util > 0)
sum(accepted$bc_util > 1)
is.na(accepted$bc_util)
sum(is.na(accepted$bc_util))
###remove missing data
acceptedcomplete <- accepted[complete.cases(accepted),]
acceptedNAs <- accepted[!complete.cases(accepted),]
hist(acceptedcomplete$bc_util, breaks=40)
sum(acceptedcomplete$bc_util > 100)
sum(acceptedcomplete$bc_util >= 100)
sum(acceptedcomplete$bc_util > 100)/nrow(acceptedcomplete$bc_util)
sum(acceptedcomplete$bc_util > 100)/nrow(acceptedcomplete)
#skim it- what variables deserve further consideration?
skim(accepted)
#create new variable: bc_open_bal
var <- acceptedcomplete$total_bc_limit * acceptedcomplete$bc_util
hist(car)
hist(var)
skim(var)
#create new variable: bc_open_bal
var <- acceptedcomplete$total_bc_limit * acceptedcomplete$bc_util/100
hist(var)
#visualize the two
plot(var, acceptedcomplete$total_bc_limit)
#visualize the two
plot(var/1000, acceptedcomplete$total_bc_limit/1000)
#visualize the two
plot(acceptedcomplete$total_bc_limit/1000, var/1000)
abline(a = 0, b = 1)
#create new variable: bc_open_bal
bc_open_bal <- acceptedcomplete$total_bc_limit * acceptedcomplete$bc_util/100
hist(bc_open_bal)
#visualize the two
plot(acceptedcomplete$total_bc_limit/1000, bc_open_bal/1000)
#visualize the two
plot(bc_open_bal/1000, acceptedcomplete$total_bc_limit/1000)
abline(a = 0, b = 1)
